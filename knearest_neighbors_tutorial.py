# -*- coding: utf-8 -*-
"""KNearest_Neighbors_Tutorial.ipynb

Automatically generated by Colaboratory.

"""

# https://www.kaggle.com/nareshbhat/health-care-data-set-on-heart-attack-possibility

# Step 1: Load the data
from google.colab import files
uploaded = files.upload()

# Attribute Information
# 1) age
# 2) sex
# 3) cp = chest pain type (4 values)
# 4) trestbps = resting blood pressure
# 5) chol = serum cholestoral in mg/dl
# 6) fbs = fasting blood sugar > 120 mg/dl
# 7) restecg = resting electrocardiographic results (values 0,1,2)
# 8) thalach = maximum heart rate achieved
# 9) exang = exercise induced angina
# 10) oldpeak = ST depression induced by exercise relative to rest
# 11) slope = the slope of the peak exercise ST segment
# 12) ca = number of major vessels (0-3) colored by flourosopy
# 13) thal: 0 = normal; 1 = fixed defect; 2 = reversable defect
# 14) target: 0= less chance of heart attack 1= more chance of heart attack

# Commented out IPython magic to ensure Python compatibility.
import numpy as np 
import pandas as pd 

# %matplotlib inline
import seaborn as sns #Seaborn is a Python data visualization library based on matplotlib. It provides a high-level interface for drawing attractive and informative statistical graphics.
import matplotlib.pyplot as plt #plotting engine

# %config InlineBackend.figure_format = 'retina' #make your chart/graph looks sharper
sns.set() #start seaborn engine

df = pd.read_csv("heart.csv")

# Step 2:Explore the data
df.head()

df.describe()

df.info()

# Step 4: Exploratory Data Analysis
sns.set(rc = {'figure.figsize':(12,10)})
sns.set_context("talk", font_scale=0.5)

sns.heatmap(df.corr(), cmap='Reds', annot=True)

# Attribute Information
# 1) age
# 2) sex
# 3) cp = chest pain type (4 values)
# 4) trestbps = resting blood pressure
# 5) chol = serum cholestoral in mg/dl
# 6) fbs = fasting blood sugar > 120 mg/dl
# 7) restecg = resting electrocardiographic results (values 0,1,2)
# 8) thalach = maximum heart rate achieved
# 9) exang = exercise induced angina
# 10) oldpeak = ST depression induced by exercise relative to rest
# 11) slope = the slope of the peak exercise ST segment
# 12) ca = number of major vessels (0-3) colored by flourosopy
# 13) thal: 0 = normal; 1 = fixed defect; 2 = reversable defect
# 14) target: 0= less chance of heart attack 1= more chance of heart attack

# Step 4: Train the model
import sklearn
from sklearn import preprocessing, neighbors
from sklearn.model_selection import train_test_split

X = df.drop("target", axis=1)
X = preprocessing.scale(X)
y = df['target']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3)

clf = neighbors.KNeighborsClassifier()
clf.fit(X_train, y_train)

accuracy = clf.score(X_train, y_train)
print("Accuracy", accuracy)

# Step 6: Prediction
for X,y in zip(X_test, y_test):
	print(f"Predicted Target:{clf.predict([X])[0]}, Actual Target: {y}")

# Bonus: SVM for classification
from sklearn import svm
clf2 = svm.SVC(kernel="linear")
clf2.fit(X_train, y_train)
confidence2 = clf2.score(X_train, y_train)
print("Accuracy:", confidence2)

for X,y in zip(X_test, y_test):
	print(f"Model:{clf2.predict([X])[0]}, Actual: {y}")

